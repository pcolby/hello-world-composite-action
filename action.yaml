name: 'Hello World'
description: 'Greet someone'
inputs:
  who-to-greet:  # id of input
    description: 'Who to greet'
    required: true
    default: 'World'
  test-default:
    description: 'something defaulted'
    required: true
    default: 'defaulted'
  test-optional-given:
    description: 'something given'
    required: false
  testOptionNotGiven:
    description: 'something missing'
    required: false
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    - run: echo Hello '${{ inputs.who-to-greet }}'.
      shell: bash
    - run: echo Hello '${{ runner.temp }}'.
      shell: bash
    - id: random-number-generator
      run: echo "::set-output name=random-number::$(echo $RANDOM)"
      shell: bash
    - run: |
        echo '<${{ inputs.test-default }}>'
        echo '<${{ inputs.test-optional-given }}>'
        echo '<${{ inputs.test-OptionNotGiven }}>'
        [[ -z '<${{ inputs.test-optional-given }}>' ]] || safeA=$(jq --raw-input --slurp <<< '${{ inputs.test-optional-given }}')
        [[ -z '<${{ inputs.test-OptionNotGiven }}>' ]] || safeB=$(jq --raw-input --slurp <<< '${{ inputs.test-OptionNotGiven }}')
        json="$(cat <<--
        {
          "foo": "bar",
          ${safeA:+\"FOO_A\": "$safeA",}
          ${safeB:+\"FOO_B\": "$safeB",}
        }
        -
        )";
        echo "<$json>"
      shell: bash
    #- run: "echo A with: '${{ inputs.secret_a }}'."
      #with:
      #  secret_a: ${{ secrets.TEST_SECRET_A }}
    #  shell: bash
    #- name: foo
    #  env:
    #    secret_a: ${{ secrets.TEST_SECRET_A }}
    #  run: "echo A end: '${{ env.secret_a }}'."
    #  shell: bash
    - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
      shell: bash
    - run: goodbye.sh
      shell: bash
